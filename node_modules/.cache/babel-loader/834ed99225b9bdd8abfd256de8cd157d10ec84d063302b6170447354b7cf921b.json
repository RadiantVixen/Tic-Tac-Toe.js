{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'./axios';import'./Row.css';import YouTube from'react-youtube';import movieTrailer from'movie-trailer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const base_url=\"https://image.tmdb.org/t/p/original/\";function Row(_ref){let{title,fetchUrl,isLargeRow}=_ref;const[movies,setMovies]=useState([]);const[trailerUrl,setTrailerUrl]=useState(\"\");useEffect(()=>{async function fetchData(){try{const request=await axios.get(fetchUrl);setMovies(request.data.results);}catch(error){console.error('Error fetching movies:',error);}}fetchData();},[fetchUrl]);const opts={height:'390',width:'100%',playerVars:{autoplay:1}};const handleClick=movie=>{if(trailerUrl){setTrailerUrl(\"\");// Close trailer if already open\n}// Try finding the trailer using different movie name variations\nmovieTrailer((movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.title)||(movie===null||movie===void 0?void 0:movie.original_name)||(movie===null||movie===void 0?void 0:movie.original_title)||\"\").then(url=>{if(url){const urlParams=new URLSearchParams(new URL(url).search);setTrailerUrl(urlParams.get(\"v\"));// Set the YouTube video ID\n}else{console.warn(\"Trailer not found for:\",(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.title));}}).catch(error=>console.error(\"Error finding trailer:\",error));};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"row__posters\",children:movies.map(movie=>/*#__PURE__*/_jsx(\"img\",{onClick:()=>handleClick(movie),className:\"row__poster \".concat(isLargeRow?\"row__posterLarge\":\"\"),src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),alt:(movie===null||movie===void 0?void 0:movie.name)||(movie===null||movie===void 0?void 0:movie.title)||\"Movie Poster\"},movie.id))}),trailerUrl&&/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})]});}export default Row;","map":{"version":3,"names":["React","useEffect","useState","axios","YouTube","movieTrailer","jsx","_jsx","jsxs","_jsxs","base_url","Row","_ref","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","request","get","data","results","error","console","opts","height","width","playerVars","autoplay","handleClick","movie","name","original_name","original_title","then","url","urlParams","URLSearchParams","URL","search","warn","catch","className","children","map","onClick","concat","src","poster_path","backdrop_path","alt","id","videoId"],"sources":["/home/aicha/Desktop/netflix-clone/src/Row.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from './axios';\nimport './Row.css';\nimport YouTube from 'react-youtube';\nimport movieTrailer from 'movie-trailer';\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\n\nfunction Row({ title, fetchUrl, isLargeRow }) {\n    const [movies, setMovies] = useState([]);\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await axios.get(fetchUrl);\n                setMovies(request.data.results);\n            } catch (error) {\n                console.error('Error fetching movies:', error);\n            }\n        }\n        fetchData();\n    }, [fetchUrl]);\n\n    const opts = {\n        height: '390',\n        width: '100%',\n        playerVars: {\n            autoplay: 1,\n        },\n    };\n\n    const handleClick = (movie) => {\n        if (trailerUrl) {\n            setTrailerUrl(\"\"); // Close trailer if already open\n        }\n\n        // Try finding the trailer using different movie name variations\n        movieTrailer(movie?.name || movie?.title || movie?.original_name || movie?.original_title || \"\")\n            .then((url) => {\n                if (url) {\n                    const urlParams = new URLSearchParams(new URL(url).search);\n                    setTrailerUrl(urlParams.get(\"v\")); // Set the YouTube video ID\n                } else {\n                    console.warn(\"Trailer not found for:\", movie?.name || movie?.title);\n                }\n            })\n            .catch((error) => console.error(\"Error finding trailer:\", error));\n    };\n\n    return (\n        <div className='row'>\n            <h2>{title}</h2>\n            <div className=\"row__posters\">\n                {movies.map((movie) => (\n                    <img\n                        key={movie.id}\n                        onClick={() => handleClick(movie)}\n                        className={`row__poster ${isLargeRow ? \"row__posterLarge\" : \"\"}`}\n                        src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\n                        alt={movie?.name || movie?.title || \"Movie Poster\"}\n                    />\n                ))}\n            </div>\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\n        </div>\n    );\n}\n\nexport default Row;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}